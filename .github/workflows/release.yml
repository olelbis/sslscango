name: Build and Release tlsanalyzer

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.4

      - name: Build binary
        run: |
          output_name=tlsanalyzer-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            output_name=${output_name}.exe
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-X 'github.com/olelbis/tlsanalyzer/build.Version=$(cat VERSION)' -X 'github.com/olelbis/tlsanalyzer/build.BuildUser=Team tlsanalyzer' -X 'github.com/olelbis/tlsanalyzer/build.BuildTime=$(date)' -s -w" -o $output_name .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: tlsanalyzer-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    needs: build_and_release
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release and Upload All Binaries
        uses: ncipollo/release-action@v1
        with:
           artifacts: ./artifacts/**/*
           tag: ${{ github.ref_name }}
           name: tlsanalyzer elease ${{ github.ref_name }}  # release title
           prerelease: false
           body: |
            ### What's new
            - v0.5.1 action test
            - v0.5.0 project renamed
            - v0.4.0 markdown report
            - v0.3.0 added gorouines to improve scanning performance
            - v0.2.0 added screen cleanup
            - v0.1.0 very first release
            - Tested on Apple M3 Pro - Sequoia 15.5